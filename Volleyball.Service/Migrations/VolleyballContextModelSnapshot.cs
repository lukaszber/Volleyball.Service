// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Volleyball.Service.Entities;
using Volleyball.Service.Enums;

namespace Volleyball.Service.Migrations
{
    [DbContext(typeof(VolleyballContext))]
    partial class VolleyballContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Volleyball.Service.Entities.League", b =>
                {
                    b.Property<int>("LeagueId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Country")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("LeagueId");

                    b.ToTable("LeagueSet");
                });

            modelBuilder.Entity("Volleyball.Service.Entities.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateOfMatch");

                    b.Property<int?>("GuestTeamTeamId");

                    b.Property<int?>("HostTeamTeamId");

                    b.HasKey("MatchId");

                    b.HasIndex("GuestTeamTeamId");

                    b.HasIndex("HostTeamTeamId");

                    b.ToTable("MatcheSet");
                });

            modelBuilder.Entity("Volleyball.Service.Entities.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<string>("CountryOfOrigin");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int>("Number");

                    b.Property<int>("Position");

                    b.Property<string>("Surname");

                    b.Property<int?>("TeamId");

                    b.HasKey("PlayerId");

                    b.HasIndex("TeamId");

                    b.ToTable("PlayerSet");
                });

            modelBuilder.Entity("Volleyball.Service.Entities.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("LeagueId");

                    b.Property<string>("Name");

                    b.HasKey("TeamId");

                    b.HasIndex("LeagueId");

                    b.ToTable("TeamSet");
                });

            modelBuilder.Entity("Volleyball.Service.Entities.Match", b =>
                {
                    b.HasOne("Volleyball.Service.Entities.Team", "GuestTeam")
                        .WithMany()
                        .HasForeignKey("GuestTeamTeamId");

                    b.HasOne("Volleyball.Service.Entities.Team", "HostTeam")
                        .WithMany()
                        .HasForeignKey("HostTeamTeamId");
                });

            modelBuilder.Entity("Volleyball.Service.Entities.Player", b =>
                {
                    b.HasOne("Volleyball.Service.Entities.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("Volleyball.Service.Entities.Team", b =>
                {
                    b.HasOne("Volleyball.Service.Entities.League", "League")
                        .WithMany()
                        .HasForeignKey("LeagueId");
                });
#pragma warning restore 612, 618
        }
    }
}
